TO DO General:
	[ ] Cabiar métodos en archivo
		[ ]  tetris.py
		[ ]  train.py
		[ ]  test.py


RED NEURONAL (Celeste)
		[ ] Ver las capas internas de las red.
		[ ] Evaluar xq convolucional y lineal. 

TRAIN   
		[X] Cambier los prints en consola
			[Epoch __/__]	[Lines destroyed __]	[Score ___]
		[X] Agregar uso de la GPU
		[ ] Plotear Scores de train.py (histograma)  (Gatto)
		[x] Guardar modelos de train.py cada ¿500? épocas
		[ ] Quitar los parser  		(Gatto)
		[ ] Hacer que el codigo sea mas legible (optimizar el codigo, quitar cosas que se vean complejas). (both)
		[ ] Modularizar train  (both)
		[ ] Entender como funciona el deep q laerning (entender reward y penalizacion) (Celeste)
		[ ] Modularizar el deep q laerning (Celeste)
		[ ] Guardar en dataframe los scores y lineas por cada época (Gatto) 
		[ ] Arreglar que el train inicie las épocas al rato

TEST
		[ ] Testear N veces cada modelo y guardar los scores
		[ ] Plotear y contrastar los scores de los modelos (boxplot)
		[ ] Quitar parse
		[ ] Correr test con n veces por cada modelo generado
		[ ] Guardar en dataframe los scores y lineas por cada modelo
		[ ] Quitar mp4

JUEGO
		[ ] Ver si se puede cambiar Pieces * rotate ()
		[ ] Compararlo con los otros dos juegos (both)
		[ ] Optimizar/limpiar código ()
		[ ] Cambiar nombres de variables y metodos (both)
		[ ] Quitar la parte de video (urge)
		[ ] Quitar los parser (Gatto)
		[ ] Documentar bien cada método y variable (both)
		[ ] Cambiar interfaz del juego (boxes y colores, solo agregar scores y # lines, de posicion).
		[ ] Cambiar el color de las figuras. 

DOCUMENTO
		[ ] hiperparámetros usados en train.py
		[ ] histograma de train.py
		[ ] comportamiento del laerning deducido por prints de consola de train.py
		[ ] boxplot de test.py
		[ ] conclusiones